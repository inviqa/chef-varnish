# Configuration file for varnish
#
# /etc/init.d/varnish expects the variable $DAEMON_OPTS to be set from this
# shell script fragment.
#

# Maximum number of open files (for ulimit -n)
NFILES=131072

# Locked shared memory (for ulimit -l)
# Default log size is 82MB + header
MEMLOCK=82000

# Maximum size of corefile (for ulimit -c). Default in Fedora is 0
# DAEMON_COREFILE_LIMIT="unlimited"

# Set this to 1 to make init script reload try to switch vcl without restart.
# To make this work, you need to set the following variables
# explicit: VARNISH_VCL_CONF, VARNISH_ADMIN_LISTEN_ADDRESS,
# VARNISH_ADMIN_LISTEN_PORT, VARNISH_SECRET_FILE, or in short,
# use Alternative 3, Advanced configuration, below
RELOAD_VCL=1

# This file contains 4 alternatives, please use only one.

## Alternative 1, Minimal configuration, no VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# content server on localhost:8080.  Use a fixed-size cache file.
#
#DAEMON_OPTS="-a :6081 \
#             -T localhost:6082 \
#             -b localhost:8080 \
#             -u varnish -g varnish \
#             -s file,/var/lib/varnish/varnish_storage.bin,1G"


## Alternative 2, Configuration with VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# one content server selected by the vcl file, based on the request.  Use a
# fixed-size cache file.
#
#DAEMON_OPTS="-a :6081 \
#             -T localhost:6082 \
#             -f /etc/varnish/default.vcl \
#             -u varnish -g varnish \
#             -S /etc/varnish/secret \
#             -s file,/var/lib/varnish/varnish_storage.bin,1G"


## Alternative 3, Advanced configuration
#
# See varnishd(1) for more information.
#
# # Main configuration file. You probably want to change it :)
VARNISH_VCL_CONF=<%= @params[:VARNISH_VCL_CONF] %>
#
# # Default address and port to bind to
# # Blank address means all IPv4 and IPv6 interfaces, otherwise specify
# # a host name, an IPv4 dotted quad, or an IPv6 address in brackets.
# VARNISH_LISTEN_ADDRESS=
VARNISH_LISTEN_PORT=<%= @params[:VARNISH_LISTEN_PORT] %>
#
# # Telnet admin interface listen address and port
VARNISH_ADMIN_LISTEN_ADDRESS=<%= @params[:VARNISH_ADMIN_LISTEN_ADDRESS] %>
VARNISH_ADMIN_LISTEN_PORT=<%= @params[:VARNISH_ADMIN_LISTEN_PORT] %>
#
# # Shared secret file for admin interface
VARNISH_SECRET_FILE=<%= @params[:VARNISH_SECRET_FILE] %>
#
# # The minimum number of worker threads to start
VARNISH_MIN_THREADS=<%= @params[:VARNISH_MIN_THREADS] %>
#
# # The Maximum number of worker threads to start
VARNISH_MAX_THREADS=<%= @params[:VARNISH_MAX_THREADS] %>
#
# # Idle timeout for worker threads
VARNISH_THREAD_TIMEOUT=<%= @params[:VARNISH_THREAD_TIMEOUT] %>
#
# # Cache file location
VARNISH_STORAGE_FILE=<%= @params[:VARNISH_STORAGE_FILE] %>
#
# # Cache file size: in bytes, optionally using k / M / G / T suffix,
# # or in percentage of available disk space using the % suffix.
VARNISH_STORAGE_SIZE=<%= @params[:VARNISH_STORAGE_SIZE] %>
#
# # Backend storage specification
<% if @params[:VARNISH_STORAGE] === "file" %>
VARNISH_STORAGE="file,${VARNISH_STORAGE_FILE},${VARNISH_STORAGE_SIZE}"
<% else %>
VARNISH_STORAGE="malloc,${VARNISH_STORAGE_SIZE}"
<% end %>
#
# # Default TTL used when the backend does not specify one
VARNISH_TTL=<%= @params[:VARNISH_TTL] %>
#
# # DAEMON_OPTS is used by the init script.  If you add or remove options, make
# # sure you update this section, too.
DAEMON_OPTS="-a ${VARNISH_LISTEN_ADDRESS}:${VARNISH_LISTEN_PORT} \
             -f ${VARNISH_VCL_CONF} \
             -T ${VARNISH_ADMIN_LISTEN_ADDRESS}:${VARNISH_ADMIN_LISTEN_PORT} \
             -t ${VARNISH_TTL} \
             -w ${VARNISH_MIN_THREADS},${VARNISH_MAX_THREADS},${VARNISH_THREAD_TIMEOUT} \
             -u varnish -g varnish \
             -S ${VARNISH_SECRET_FILE} \
             <% if @params[:VARNISH_WORKING_DIR].to_s != '' %>
                 -n <%= @params[:VARNISH_WORKING_DIR] %> \
             <% end %>
             <% if node['varnish']['GeoIP_enabled'] %>
                 -p 'cc_command=exec cc -fpic -shared -Wl,-x -L/usr/local/lib -lGeoIP -o %o %s' \
             <% end %>
             <% if node['varnish']['maximum_headers'] > 0 %>
                 -p 'http_max_hdr=<%= node['varnish']['maximum_headers'] %>' \
             <% end %>
             -s ${VARNISH_STORAGE}"
#


## Alternative 4, Do It Yourself. See varnishd(1) for more information.
#
# DAEMON_OPTS=""
